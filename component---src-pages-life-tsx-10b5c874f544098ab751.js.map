{"version":3,"file":"component---src-pages-life-tsx-10b5c874f544098ab751.js","mappings":"+HAGA,IAAMA,GAAY,iHAclB,IAR0D,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SAC3D,OACEC,EAAAA,EAAAA,IAACF,EAAY,KACPC,EAGV,C,+CCZA,IAAME,GAAc,kFAapB,IAT4D,SAAH,GAAsB,IAAhBF,EAAQ,EAARA,SAC7D,OACEC,EAAAA,EAAAA,IAACC,EAAc,MACbD,EAAAA,EAAAA,IAAAA,KAAAA,CAAIE,UAAU,SAAO,WACnBH,EAGR,C,mFCuDA,UAnCmD,SAAH,GAa7C,QAZFI,KAAIC,EAAAA,EACFC,KACEC,aAAgBC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAO,EAAPA,QAEZC,GAAA,EAA1BC,kBAAqBC,MAAKF,EAC1BG,MAIEC,GAFiB,EADjBC,gBACEC,gBAEO,EAATF,WAKGG,EAAUC,EAAAA,EAAAA,KAEhB,OACElB,EAAAA,EAAAA,IAACmB,EAAAA,EAAQ,CACPZ,MAAOA,EACPC,YAAaA,EACbY,IAAKX,EACLY,MAAOP,EACPG,QAASA,IAETjB,EAAAA,EAAAA,IAACsB,EAAAA,EAAK,OAGNtB,EAAAA,EAAAA,IAACuB,EAAAA,EAAO,MAKd,C","sources":["webpack://kodooui/./src/components/Common/Aside.tsx","webpack://kodooui/./src/components/Common/Content.tsx","webpack://kodooui/./src/pages/life.tsx"],"sourcesContent":["import React, { FunctionComponent, ReactNode } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst AsideWrapper = styled.aside`\n  position: sticky;\n  top: 90px;\n  height: calc(100vh - 90px);\n`\n\nconst Aside: FunctionComponent<{ children: ReactNode }> = ({ children }) => {\n  return (\n    <AsideWrapper>\n        { children }\n    </AsideWrapper>\n  )\n}\n\nexport default Aside","import React, { FunctionComponent, ReactNode } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst ContentWrapper = styled.section`\n  position: relative;\n`\n\nconst Content: FunctionComponent<{ children: ReactNode }> = ({ children }) => {\n  return (\n    <ContentWrapper>\n      <h2 className=\"blind\">블로그 콘텐츠</h2>\n      { children }\n    </ContentWrapper>\n  )\n}\n\nexport default Content","import React, { FunctionComponent } from \"react\";\nimport {graphql} from \"gatsby\";\nimport {PostListItemType} from \"../types/PostItem.types\";\nimport {IGatsbyImageData} from \"gatsby-plugin-image\";\nimport Template from \"components/Common/Template\";\nimport Aside from \"components/Common/Aside\";\nimport Content from \"components/Common/Content\";\nimport { TabTypes } from \"../constants\";\n\n\ntype LifePageProps = {\n  location: {\n    search: string\n  }\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: PostListItemType[]\n    }\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n      publicURL: string\n    }\n  }\n}\n\nconst LifePage: FunctionComponent<LifePageProps> = function ({\n data: {\n   site: {\n     siteMetadata: { title, description, siteUrl, },\n   },\n   allMarkdownRemark: { edges },\n   file: {\n     childImageSharp: {\n       gatsbyImageData\n     },\n     publicURL,\n   }\n },\n}) {\n\n  const tabType = TabTypes.life;\n\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n      tabType={tabType}\n    >\n      <Aside>\n\n      </Aside>\n      <Content>\n\n      </Content>\n    </Template>\n  )\n};\n\nexport default LifePage;\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: frontmatter___id }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`"],"names":["AsideWrapper","children","___EmotionJSX","ContentWrapper","className","data","_ref$data$site$siteMe","site","siteMetadata","title","description","siteUrl","_ref$data$file","allMarkdownRemark","edges","file","publicURL","childImageSharp","gatsbyImageData","tabType","TabTypes","Template","url","image","Aside","Content"],"sourceRoot":""}